{"ast":null,"code":"var __jsx = React.createElement;\n\n/* eslint-disable no-useless-constructor */\n\n/* eslint-disable react/destructuring-assignment */\nimport React, { useEffect } from 'react'; // import { connect, useDispatch, useSelector } from 'react-redux';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { increment, decrement } from '../redux/actions/counterActions';\nimport * as postActions from '../redux/reducers/post'; // class App extends React.Component {\n//   static getInitialProps({ store }) {}\n//   constructor(props) {\n//     super(props);\n//   }\n//   render() {\n//     return (\n//       <div>\n//         <button onClick={this.props.incrementCounter} type=\"button\">Increment</button>\n//         <button onClick={this.props.decrementCounter} type=\"button\">Decrement</button>\n//         <h1>{this.props.counter}</h1>\n//       </div>\n//     );\n//   }\n// }\n\nconst App = () => {\n  const {\n    value\n  } = useSelector(state => state.counter, []);\n  const {\n    post,\n    loading,\n    error\n  } = useSelector(state => state.post, []);\n  console.log(post);\n  const dispatch = useDispatch(); // console.log(value);\n\n  useEffect(() => {\n    // console.log(postActions);\n    dispatch(postActions.getPost(value));\n  }, []);\n\n  const aa = () => {\n    dispatch(increment());\n  };\n\n  const bb = () => {\n    dispatch(decrement());\n  };\n\n  return __jsx(\"div\", null, value, __jsx(\"button\", {\n    type: \"button\",\n    onClick: aa\n  }, \"\\uC99D\\uAC00\"), __jsx(\"button\", {\n    type: \"button\",\n    onClick: bb\n  }, \"\\uAC10\\uC18C\"), loading && __jsx(\"h2\", null, \"\\uB85C\\uB529\\uC911...\"));\n}; // const mapStateToProps = (state) => ({\n//   counter: state.counter.value,\n// });\n// const mapDispatchToProps = {\n//   incrementCounter,\n//   decrementCounter,\n// };\n// export default connect(mapStateToProps, mapDispatchToProps)(App);\n\n\nexport default App;","map":{"version":3,"sources":["D:/Desktop/blog_project/pages/index.jsx"],"names":["React","useEffect","useDispatch","useSelector","increment","decrement","postActions","App","value","state","counter","post","loading","error","console","log","dispatch","getPost","aa","bb"],"mappings":";;AAAA;;AACA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,iCAArC;AACA,OAAO,KAAKC,WAAZ,MAA6B,wBAA7B,C,CAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAM;AAAEC,IAAAA;AAAF,MAAYL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,OAAlB,EAA2B,EAA3B,CAA7B;AACA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BV,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACE,IAAlB,EAAwB,EAAxB,CAA5C;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA,QAAMK,QAAQ,GAAGd,WAAW,EAA5B,CAJgB,CAKhB;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd;AACAe,IAAAA,QAAQ,CAACV,WAAW,CAACW,OAAZ,CAAoBT,KAApB,CAAD,CAAR;AACD,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMU,EAAE,GAAG,MAAM;AACfF,IAAAA,QAAQ,CAACZ,SAAS,EAAV,CAAR;AACD,GAFD;;AAGA,QAAMe,EAAE,GAAG,MAAM;AACfH,IAAAA,QAAQ,CAACX,SAAS,EAAV,CAAR;AACD,GAFD;;AAGA,SACE,mBACGG,KADH,EAEE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEU;AAA/B,oBAFF,EAGE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEC;AAA/B,oBAHF,EAIIP,OAAO,IAAI,0CAJf,CADF;AASD,CA1BD,C,CA4BA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;;;AACA,eAAeL,GAAf","sourcesContent":["/* eslint-disable no-useless-constructor */\r\n/* eslint-disable react/destructuring-assignment */\r\nimport React, { useEffect } from 'react';\r\n// import { connect, useDispatch, useSelector } from 'react-redux';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { increment, decrement } from '../redux/actions/counterActions';\r\nimport * as postActions from '../redux/reducers/post';\r\n\r\n// class App extends React.Component {\r\n//   static getInitialProps({ store }) {}\r\n\r\n//   constructor(props) {\r\n//     super(props);\r\n//   }\r\n\r\n//   render() {\r\n//     return (\r\n//       <div>\r\n//         <button onClick={this.props.incrementCounter} type=\"button\">Increment</button>\r\n//         <button onClick={this.props.decrementCounter} type=\"button\">Decrement</button>\r\n//         <h1>{this.props.counter}</h1>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\nconst App = () => {\r\n  const { value } = useSelector((state) => state.counter, []);\r\n  const { post, loading, error } = useSelector((state) => state.post, []);\r\n  console.log(post);\r\n  const dispatch = useDispatch();\r\n  // console.log(value);\r\n  useEffect(() => {\r\n    // console.log(postActions);\r\n    dispatch(postActions.getPost(value));\r\n  }, []);\r\n\r\n  const aa = () => {\r\n    dispatch(increment());\r\n  };\r\n  const bb = () => {\r\n    dispatch(decrement());\r\n  };\r\n  return (\r\n    <div>\r\n      {value}\r\n      <button type=\"button\" onClick={aa}>증가</button>\r\n      <button type=\"button\" onClick={bb}>감소</button>\r\n      { loading && <h2>로딩중...</h2>}\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\n// const mapStateToProps = (state) => ({\r\n//   counter: state.counter.value,\r\n// });\r\n\r\n// const mapDispatchToProps = {\r\n//   incrementCounter,\r\n//   decrementCounter,\r\n// };\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(App);\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}