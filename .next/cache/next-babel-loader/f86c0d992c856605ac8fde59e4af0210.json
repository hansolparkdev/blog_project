{"ast":null,"code":"var __jsx = React.createElement;\n\n/* eslint-disable no-shadow */\n\n/* eslint-disable react/jsx-props-no-spreading */\nimport React, { Fragment } from 'react';\nimport App from 'next/app';\nimport { Provider } from 'react-redux';\nimport withRedux from 'next-redux-wrapper';\nimport Head from 'next/head';\nimport moment from 'moment';\nimport Layout from '../components/Layout';\nimport store from '../redux/store';\nmoment.locale('ko'); // class RootApp extends App {\n//   static async getInitialProps({ Component, ctx }) {\n//     const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\n//     // Anything returned here can be access by the client\n//     return { pageProps };\n//   }\n//   render() {\n//     const { Component, pageProps, store } = this.props;\n//     return (\n//       <Fragment>\n//         <Head>\n//           <title>Devsol Blog</title>\n//         </Head>\n//         <Provider store={store}>\n//           <Layout>\n//             <Component {...pageProps} />\n//           </Layout>\n//         </Provider>\n//       </Fragment>\n//     );\n//   }\n// }\n\nconst RootApp = () => {\n  const {\n    Component,\n    pageProps,\n    store\n  } = this.props;\n  return __jsx(Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Devsol Blog\")), __jsx(Provider, {\n    store: store\n  }, __jsx(Layout, null, __jsx(Component, pageProps))));\n};\n\nRootApp.getInitialProps = async context => {\n  const {\n    Component,\n    ctx\n  } = contxet;\n  const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {}; // Anything returned here can be access by the client\n\n  return {\n    pageProps\n  };\n}; // const Store = () => store;\n\n\nexport default withRedux(() => store)(RootApp); //리턴한 스토어","map":{"version":3,"sources":["D:/Desktop/blog_project/pages/_app.jsx"],"names":["React","Fragment","App","Provider","withRedux","Head","moment","Layout","store","locale","RootApp","Component","pageProps","props","getInitialProps","context","ctx","contxet"],"mappings":";;AAAA;;AACA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AAEAF,MAAM,CAACG,MAAP,CAAc,IAAd,E,CAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,OAAO,GAAG,MAAM;AACpB,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,SAAb;AAAwBJ,IAAAA;AAAxB,MAAkC,KAAKK,KAA7C;AACE,SACE,MAAC,QAAD,QACE,MAAC,IAAD,QACE,mCADF,CADF,EAIE,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEL;AAAjB,KACE,MAAC,MAAD,QACE,MAAC,SAAD,EAAeI,SAAf,CADF,CADF,CAJF,CADF;AAYH,CAdD;;AAgBAF,OAAO,CAACI,eAAR,GAA0B,MAAOC,OAAP,IAAmB;AAC3C,QAAM;AAACJ,IAAAA,SAAD;AAAYK,IAAAA;AAAZ,MAAmBC,OAAzB;AACA,QAAML,SAAS,GAAGD,SAAS,CAACG,eAAV,GAA4B,MAAMH,SAAS,CAACG,eAAV,CAA0BE,GAA1B,CAAlC,GAAmE,EAArF,CAF2C,CAI3C;;AACA,SAAO;AAAEJ,IAAAA;AAAF,GAAP;AACD,CAND,C,CAOA;;;AAEA,eAAeR,SAAS,CAAC,MAAOI,KAAR,CAAT,CAAyBE,OAAzB,CAAf,C,CACA","sourcesContent":["/* eslint-disable no-shadow */\r\n/* eslint-disable react/jsx-props-no-spreading */\r\nimport React, { Fragment } from 'react';\r\nimport App from 'next/app';\r\nimport { Provider } from 'react-redux';\r\nimport withRedux from 'next-redux-wrapper';\r\nimport Head from 'next/head';\r\nimport moment from 'moment';\r\nimport Layout from '../components/Layout';\r\nimport store from '../redux/store';\r\n\r\nmoment.locale('ko');\r\n\r\n// class RootApp extends App {\r\n//   static async getInitialProps({ Component, ctx }) {\r\n//     const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\r\n\r\n//     // Anything returned here can be access by the client\r\n//     return { pageProps };\r\n//   }\r\n\r\n//   render() {\r\n//     const { Component, pageProps, store } = this.props;\r\n//     return (\r\n//       <Fragment>\r\n//         <Head>\r\n//           <title>Devsol Blog</title>\r\n//         </Head>\r\n//         <Provider store={store}>\r\n//           <Layout>\r\n//             <Component {...pageProps} />\r\n//           </Layout>\r\n//         </Provider>\r\n//       </Fragment>\r\n//     );\r\n//   }\r\n// }\r\n\r\nconst RootApp = () => {\r\n  const { Component, pageProps, store } = this.props;\r\n    return (\r\n      <Fragment>\r\n        <Head>\r\n          <title>Devsol Blog</title>\r\n        </Head>\r\n        <Provider store={store}>\r\n          <Layout>\r\n            <Component {...pageProps} />\r\n          </Layout>\r\n        </Provider>\r\n      </Fragment>\r\n    );\r\n}\r\n\r\nRootApp.getInitialProps = async (context) => {\r\n  const {Component, ctx} = contxet\r\n  const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\r\n\r\n  // Anything returned here can be access by the client\r\n  return { pageProps };\r\n}\r\n// const Store = () => store;\r\n\r\nexport default withRedux(() => (store))(RootApp);\r\n//리턴한 스토어"]},"metadata":{},"sourceType":"module"}