{"ast":null,"code":"var __jsx = React.createElement;\n\n/* eslint-disable no-useless-constructor */\n\n/* eslint-disable react/destructuring-assignment */\nimport React, { useEffect } from 'react'; // import { connect, useDispatch, useSelector } from 'react-redux';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { increment, decrement } from '../redux/actions/counterActions';\nimport * as postActions from '../redux/reducers/post'; // class App extends React.Component {\n//   static getInitialProps({ store }) {}\n//   constructor(props) {\n//     super(props);\n//   }\n//   render() {\n//     return (\n//       <div>\n//         <button onClick={this.props.incrementCounter} type=\"button\">Increment</button>\n//         <button onClick={this.props.decrementCounter} type=\"button\">Decrement</button>\n//         <h1>{this.props.counter}</h1>\n//       </div>\n//     );\n//   }\n// }\n\nvar App = function App(props) {\n  var _useSelector = useSelector(function (state) {\n    return state.counter;\n  }, []),\n      value = _useSelector.value;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post;\n  }, []),\n      post = _useSelector2.post,\n      loading = _useSelector2.loading,\n      error = _useSelector2.error;\n\n  var dispatch = useDispatch();\n  useEffect(function () {\n    dispatch(postActions.getPost(value));\n  }, []);\n\n  var aa = function aa() {\n    dispatch(increment());\n  };\n\n  var bb = function bb() {\n    dispatch(decrement());\n  };\n\n  return __jsx(\"div\", null, value, __jsx(\"button\", {\n    type: \"button\",\n    onClick: aa\n  }, \"\\uC99D\\uAC00\"), __jsx(\"button\", {\n    type: \"button\",\n    onClick: bb\n  }, \"\\uAC10\\uC18C\"), loading && __jsx(\"h2\", null, \"\\uB85C\\uB529\\uC911...\"), error ? __jsx(\"h1\", null, \"\\uC5D0\\uB7EC\\uBC1C\\uC0DD!\") : __jsx(\"div\", null, __jsx(\"h1\", null, post.title), __jsx(\"p\", null, post.title)));\n}; // const mapStateToProps = (state) => ({\n//   counter: state.counter.value,\n// });\n// const mapDispatchToProps = {\n//   incrementCounter,\n//   decrementCounter,\n// };\n// export default connect(mapStateToProps, mapDispatchToProps)(App);\n\n\nexport default App;","map":{"version":3,"sources":["D:/Desktop/blog_project/pages/index.jsx"],"names":["React","useEffect","useDispatch","useSelector","increment","decrement","postActions","App","props","state","counter","value","post","loading","error","dispatch","getPost","aa","bb","title"],"mappings":";;AAAA;;AACA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,iCAArC;AACA,OAAO,KAAKC,WAAZ,MAA6B,wBAA7B,C,CAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,CAACC,KAAD,EAAW;AAAA,qBACHL,WAAW,CAAC,UAACM,KAAD;AAAA,WAAWA,KAAK,CAACC,OAAjB;AAAA,GAAD,EAA2B,EAA3B,CADR;AAAA,MACbC,KADa,gBACbA,KADa;;AAAA,sBAEYR,WAAW,CAAC,UAACM,KAAD;AAAA,WAAWA,KAAK,CAACG,IAAjB;AAAA,GAAD,EAAwB,EAAxB,CAFvB;AAAA,MAEbA,IAFa,iBAEbA,IAFa;AAAA,MAEPC,OAFO,iBAEPA,OAFO;AAAA,MAEEC,KAFF,iBAEEA,KAFF;;AAGrB,MAAMC,QAAQ,GAAGb,WAAW,EAA5B;AAEAD,EAAAA,SAAS,CAAC,YAAM;AACdc,IAAAA,QAAQ,CAACT,WAAW,CAACU,OAAZ,CAAoBL,KAApB,CAAD,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAMM,EAAE,GAAG,SAALA,EAAK,GAAM;AACfF,IAAAA,QAAQ,CAACX,SAAS,EAAV,CAAR;AACD,GAFD;;AAGA,MAAMc,EAAE,GAAG,SAALA,EAAK,GAAM;AACfH,IAAAA,QAAQ,CAACV,SAAS,EAAV,CAAR;AACD,GAFD;;AAGA,SACE,mBACGM,KADH,EAEE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEM;AAA/B,oBAFF,EAGE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEC;AAA/B,oBAHF,EAIIL,OAAO,IAAI,0CAJf,EAKIC,KAAK,GACH,8CADG,GAGH,mBACE,kBAAKF,IAAI,CAACO,KAAV,CADF,EAEE,iBAAIP,IAAI,CAACO,KAAT,CAFF,CARN,CADF;AAgBD,CA/BD,C,CAiCA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;;;AACA,eAAeZ,GAAf","sourcesContent":["/* eslint-disable no-useless-constructor */\r\n/* eslint-disable react/destructuring-assignment */\r\nimport React, { useEffect } from 'react';\r\n// import { connect, useDispatch, useSelector } from 'react-redux';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { increment, decrement } from '../redux/actions/counterActions';\r\nimport * as postActions from '../redux/reducers/post';\r\n\r\n// class App extends React.Component {\r\n//   static getInitialProps({ store }) {}\r\n\r\n//   constructor(props) {\r\n//     super(props);\r\n//   }\r\n\r\n//   render() {\r\n//     return (\r\n//       <div>\r\n//         <button onClick={this.props.incrementCounter} type=\"button\">Increment</button>\r\n//         <button onClick={this.props.decrementCounter} type=\"button\">Decrement</button>\r\n//         <h1>{this.props.counter}</h1>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\nconst App = (props) => {\r\n  const { value } = useSelector((state) => state.counter, []);\r\n  const { post, loading, error } = useSelector((state) => state.post, []);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(postActions.getPost(value));\r\n  }, []);\r\n\r\n  const aa = () => {\r\n    dispatch(increment());\r\n  };\r\n  const bb = () => {\r\n    dispatch(decrement());\r\n  };\r\n  return (\r\n    <div>\r\n      {value}\r\n      <button type=\"button\" onClick={aa}>증가</button>\r\n      <button type=\"button\" onClick={bb}>감소</button>\r\n      { loading && <h2>로딩중...</h2>}\r\n      { error\r\n        ? <h1>에러발생!</h1>\r\n        : (\r\n          <div>\r\n            <h1>{post.title}</h1>\r\n            <p>{post.title}</p>\r\n          </div>\r\n        )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// const mapStateToProps = (state) => ({\r\n//   counter: state.counter.value,\r\n// });\r\n\r\n// const mapDispatchToProps = {\r\n//   incrementCounter,\r\n//   decrementCounter,\r\n// };\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(App);\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}