{"ast":null,"code":"var loggerMiddleware = function loggerMiddleware(store) {\n  return function (next) {\n    return function (action) {\n      // 현재 스토어 상태값 기록\n      console.log('현재 상태', store.getState().counter); // 액션 기록\n\n      console.log('액션', action); // 액션을 다음 미들웨어, 혹은 리듀서로 넘김\n\n      var result = next(action); // 액션 처리 후의 스토어 상태 기록\n\n      console.log('다음 상태', store.getState());\n      console.log('\\n'); // 기록 구분을 위한 비어있는 줄 프린트\n\n      return result; // 여기서 반환하는 값은 store.dispatch(ACTION_TYPE) 했을때의 결과로 설정됩니다\n    };\n  };\n};\n\nexport default loggerMiddleware;","map":{"version":3,"sources":["D:/Desktop/blog_project/redux/lib/loggerMiddleware.js"],"names":["loggerMiddleware","store","next","action","console","log","getState","counter","result"],"mappings":"AAAA,IAAMA,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD;AAAA,SAAW,UAACC,IAAD;AAAA,WAAU,UAACC,MAAD,EAAY;AACxD;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBJ,KAAK,CAACK,QAAN,GAAiBC,OAAtC,EAFwD,CAGxD;;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBF,MAAlB,EAJwD,CAMxD;;AACA,UAAMK,MAAM,GAAGN,IAAI,CAACC,MAAD,CAAnB,CAPwD,CASxD;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBJ,KAAK,CAACK,QAAN,EAArB;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAXwD,CAWrC;;AAEnB,aAAOG,MAAP,CAbwD,CAazC;AAChB,KAdmC;AAAA,GAAX;AAAA,CAAzB;;AAgBA,eAAeR,gBAAf","sourcesContent":["const loggerMiddleware = (store) => (next) => (action) => {\r\n  // 현재 스토어 상태값 기록\r\n  console.log('현재 상태', store.getState().counter);\r\n  // 액션 기록\r\n  console.log('액션', action);\r\n\r\n  // 액션을 다음 미들웨어, 혹은 리듀서로 넘김\r\n  const result = next(action);\r\n\r\n  // 액션 처리 후의 스토어 상태 기록\r\n  console.log('다음 상태', store.getState());\r\n  console.log('\\n'); // 기록 구분을 위한 비어있는 줄 프린트\r\n\r\n  return result; // 여기서 반환하는 값은 store.dispatch(ACTION_TYPE) 했을때의 결과로 설정됩니다\r\n};\r\n\r\nexport default loggerMiddleware;\r\n"]},"metadata":{},"sourceType":"module"}