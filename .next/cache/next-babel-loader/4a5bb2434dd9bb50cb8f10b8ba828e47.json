{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\n\nvar _this = this;\n\nvar __jsx = React.createElement;\n\n/* eslint-disable no-shadow */\n\n/* eslint-disable react/jsx-props-no-spreading */\nimport React, { Fragment } from 'react';\nimport App from 'next/app';\nimport { Provider } from 'react-redux';\nimport withRedux from 'next-redux-wrapper';\nimport Head from 'next/head';\nimport moment from 'moment';\nimport Layout from '../components/Layout';\nimport store from '../redux/store';\nmoment.locale('ko'); // class RootApp extends App {\n//   static async getInitialProps({ Component, ctx }) {\n//     const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\n//     // Anything returned here can be access by the client\n//     return { pageProps };\n//   }\n//   render() {\n//     const { Component, pageProps, store } = this.props;\n//     return (\n//       <Fragment>\n//         <Head>\n//           <title>Devsol Blog</title>\n//         </Head>\n//         <Provider store={store}>\n//           <Layout>\n//             <Component {...pageProps} />\n//           </Layout>\n//         </Provider>\n//       </Fragment>\n//     );\n//   }\n// }\n\nvar RootApp = function RootApp() {\n  var _this$props = _this.props,\n      Component = _this$props.Component,\n      pageProps = _this$props.pageProps,\n      store = _this$props.store;\n  return __jsx(Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Devsol Blog\")), __jsx(Provider, {\n    store: store\n  }, __jsx(Layout, null, __jsx(Component, pageProps))));\n};\n\nRootApp.getInitialProps = function _callee(context) {\n  var _contxet, Component, ctx, pageProps;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _contxet = contxet, Component = _contxet.Component, ctx = _contxet.ctx;\n\n          if (!Component.getInitialProps) {\n            _context.next = 7;\n            break;\n          }\n\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(Component.getInitialProps(ctx));\n\n        case 4:\n          _context.t0 = _context.sent;\n          _context.next = 8;\n          break;\n\n        case 7:\n          _context.t0 = {};\n\n        case 8:\n          pageProps = _context.t0;\n          return _context.abrupt(\"return\", {\n            pageProps: pageProps\n          });\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n}; // const Store = () => store;\n\n\nexport default withRedux(function () {\n  return store;\n})(RootApp); //리턴한 스토어","map":{"version":3,"sources":["D:/Desktop/blog_project/pages/_app.jsx"],"names":["React","Fragment","App","Provider","withRedux","Head","moment","Layout","store","locale","RootApp","props","Component","pageProps","getInitialProps","context","contxet","ctx"],"mappings":";;;;;;AAAA;;AACA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AAEAF,MAAM,CAACG,MAAP,CAAc,IAAd,E,CAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAK;AAAA,oBACqB,KAAI,CAACC,KAD1B;AAAA,MACXC,SADW,eACXA,SADW;AAAA,MACAC,SADA,eACAA,SADA;AAAA,MACWL,KADX,eACWA,KADX;AAEjB,SACE,MAAC,QAAD,QACE,MAAC,IAAD,QACE,mCADF,CADF,EAIE,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEA;AAAjB,KACE,MAAC,MAAD,QACE,MAAC,SAAD,EAAeK,SAAf,CADF,CADF,CAJF,CADF;AAYH,CAdD;;AAgBAH,OAAO,CAACI,eAAR,GAA0B,iBAAOC,OAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,qBACCC,OADD,EACjBJ,SADiB,YACjBA,SADiB,EACNK,GADM,YACNA,GADM;;AAAA,eAENL,SAAS,CAACE,eAFJ;AAAA;AAAA;AAAA;;AAAA;AAAA,2CAE4BF,SAAS,CAACE,eAAV,CAA0BG,GAA1B,CAF5B;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,wBAE6D,EAF7D;;AAAA;AAElBJ,UAAAA,SAFkB;AAAA,2CAKjB;AAAEA,YAAAA,SAAS,EAATA;AAAF,WALiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B,C,CAOA;;;AAEA,eAAeT,SAAS,CAAC;AAAA,SAAOI,KAAP;AAAA,CAAD,CAAT,CAAyBE,OAAzB,CAAf,C,CACA","sourcesContent":["/* eslint-disable no-shadow */\r\n/* eslint-disable react/jsx-props-no-spreading */\r\nimport React, { Fragment } from 'react';\r\nimport App from 'next/app';\r\nimport { Provider } from 'react-redux';\r\nimport withRedux from 'next-redux-wrapper';\r\nimport Head from 'next/head';\r\nimport moment from 'moment';\r\nimport Layout from '../components/Layout';\r\nimport store from '../redux/store';\r\n\r\nmoment.locale('ko');\r\n\r\n// class RootApp extends App {\r\n//   static async getInitialProps({ Component, ctx }) {\r\n//     const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\r\n\r\n//     // Anything returned here can be access by the client\r\n//     return { pageProps };\r\n//   }\r\n\r\n//   render() {\r\n//     const { Component, pageProps, store } = this.props;\r\n//     return (\r\n//       <Fragment>\r\n//         <Head>\r\n//           <title>Devsol Blog</title>\r\n//         </Head>\r\n//         <Provider store={store}>\r\n//           <Layout>\r\n//             <Component {...pageProps} />\r\n//           </Layout>\r\n//         </Provider>\r\n//       </Fragment>\r\n//     );\r\n//   }\r\n// }\r\n\r\nconst RootApp = () =>{\r\n  const { Component, pageProps, store } = this.props;\r\n    return (\r\n      <Fragment>\r\n        <Head>\r\n          <title>Devsol Blog</title>\r\n        </Head>\r\n        <Provider store={store}>\r\n          <Layout>\r\n            <Component {...pageProps} />\r\n          </Layout>\r\n        </Provider>\r\n      </Fragment>\r\n    );\r\n}\r\n\r\nRootApp.getInitialProps = async (context) => {\r\n  const {Component, ctx} = contxet\r\n  const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\r\n\r\n  // Anything returned here can be access by the client\r\n  return { pageProps };\r\n}\r\n// const Store = () => store;\r\n\r\nexport default withRedux(() => (store))(RootApp);\r\n//리턴한 스토어"]},"metadata":{},"sourceType":"module"}