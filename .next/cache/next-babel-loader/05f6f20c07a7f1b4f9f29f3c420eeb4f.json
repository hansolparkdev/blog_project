{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/* eslint-disable no-return-assign */\n// 액션 선언\nvar CHANGE_INPUT = 'todos/CHANGE_INPUT';\nvar INSERT = 'todos/INSERT';\nvar TOGGLE_CHECK = 'todos/TOGGLE_CHECK';\nvar REMOVE = 'todos/REMOVE';\nvar id = 0;\nexport var changeInput = function changeInput(input) {\n  return {\n    type: CHANGE_INPUT,\n    payload: input\n  };\n};\nexport var insert = function insert(text) {\n  return {\n    type: INSERT,\n    payload: {\n      id: ++id,\n      text: text\n    }\n  };\n};\n\nvar counterReducer = function counterReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case INCREMENT_COUNTER:\n      return _objectSpread({}, state, {\n        value: state.value + action.diff\n      });\n\n    case DECREMENT_COUNTER:\n      return _objectSpread({}, state, {\n        value: state.value - 1\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n};\n\nexport default counterReducer;","map":{"version":3,"sources":["D:/Desktop/blog_project/redux/reducers/todosRecuder.jsx"],"names":["CHANGE_INPUT","INSERT","TOGGLE_CHECK","REMOVE","id","changeInput","input","type","payload","insert","text","counterReducer","state","initialState","action","INCREMENT_COUNTER","value","diff","DECREMENT_COUNTER"],"mappings":";;;;;;;;;;;;AAAA;AACA;AACA,IAAMA,YAAY,GAAG,oBAArB;AACA,IAAMC,MAAM,GAAG,cAAf;AACA,IAAMC,YAAY,GAAG,oBAArB;AACA,IAAMC,MAAM,GAAG,cAAf;AAEA,IAAIC,EAAE,GAAG,CAAT;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD;AAAA,SAAY;AAAEC,IAAAA,IAAI,EAAEP,YAAR;AAAsBQ,IAAAA,OAAO,EAAEF;AAA/B,GAAZ;AAAA,CAApB;AACP,OAAO,IAAMG,MAAM,GAAG,SAATA,MAAS,CAACC,IAAD;AAAA,SAAW;AAC/BH,IAAAA,IAAI,EAAEN,MADyB;AAE/BO,IAAAA,OAAO,EAAE;AACPJ,MAAAA,EAAE,EAAE,EAAEA,EADC;AAEPM,MAAAA,IAAI,EAAJA;AAFO;AAFsB,GAAX;AAAA,CAAf;;AAQP,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBC,YAAyB;AAAA,MAAXC,MAAW;;AACvD,UAAQA,MAAM,CAACP,IAAf;AACE,SAAKQ,iBAAL;AACE,+BAAYH,KAAZ;AAAmBI,QAAAA,KAAK,EAAEJ,KAAK,CAACI,KAAN,GAAcF,MAAM,CAACG;AAA/C;;AACF,SAAKC,iBAAL;AACE,+BAAYN,KAAZ;AAAmBI,QAAAA,KAAK,EAAEJ,KAAK,CAACI,KAAN,GAAc;AAAxC;;AACF;AACE,+BAAYJ,KAAZ;AANJ;AAQD,CATD;;AAWA,eAAeD,cAAf","sourcesContent":["/* eslint-disable no-return-assign */\r\n// 액션 선언\r\nconst CHANGE_INPUT = 'todos/CHANGE_INPUT';\r\nconst INSERT = 'todos/INSERT';\r\nconst TOGGLE_CHECK = 'todos/TOGGLE_CHECK';\r\nconst REMOVE = 'todos/REMOVE';\r\n\r\nlet id = 0;\r\n\r\nexport const changeInput = (input) => ({ type: CHANGE_INPUT, payload: input });\r\nexport const insert = (text) => ({\r\n  type: INSERT,\r\n  payload: {\r\n    id: ++id,\r\n    text,\r\n  },\r\n});\r\n\r\nconst counterReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case INCREMENT_COUNTER:\r\n      return { ...state, value: state.value + action.diff };\r\n    case DECREMENT_COUNTER:\r\n      return { ...state, value: state.value - 1 };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default counterReducer;\r\n"]},"metadata":{},"sourceType":"module"}