{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeInput, insert, toggleCheck, remove } from '../redux/reducers/todos';\nimport TodoList from '../components/TodoList';\n\nconst TodoListContainer = () => {\n  // todos 리듀서에서 관리하는 객체를 통째로 가져올 거라면 state.todos 로 간소화 시킬 수 있습니다.\n  const {\n    todos,\n    input\n  } = useSelector(state => state.todos, []); // const [onChangeInput, onInsert, onToggle, onRemove] = useActions(\n  //   [changeInput, insert, toggleCheck, remove],\n  //   [],\n  // );\n\n  const dispatch = useDispatch();\n  console.log(todos);\n\n  const onChangeInput = i => {\n    dispatch(changeInput(i));\n  };\n\n  const onInsert = id => {\n    dispatch(insert(id));\n  };\n\n  const onToggle = id => {\n    dispatch(toggleCheck(id));\n  };\n\n  const onRemove = id => {\n    dispatch(remove(id));\n  };\n\n  const onChange = useCallback(e => {\n    onChangeInput(e.target.value);\n  }, [onChangeInput]);\n  const onSubmit = useCallback(e => {\n    e.preventDefault();\n    onInsert(input);\n    onChangeInput('');\n  }, [input, onChangeInput, onInsert]);\n  return __jsx(TodoList, {\n    input: input,\n    todos: todos,\n    onChange: onChange,\n    onSubmit: onSubmit,\n    onToggle: onToggle,\n    onRemove: onRemove\n  });\n};\n\nexport default TodoListContainer;","map":{"version":3,"sources":["D:/Desktop/blog_project/pages/TodoListContainer.js"],"names":["React","useCallback","useSelector","useDispatch","changeInput","insert","toggleCheck","remove","TodoList","TodoListContainer","todos","input","state","dispatch","console","log","onChangeInput","i","onInsert","id","onToggle","onRemove","onChange","e","target","value","onSubmit","preventDefault"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACEC,WADF,EACeC,MADf,EACuBC,WADvB,EACoCC,MADpC,QAEO,yBAFP;AAGA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;AAC9B;AACA,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAmBT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACF,KAAlB,EAAyB,EAAzB,CAApC,CAF8B,CAG9B;AACA;AACA;AACA;;AACA,QAAMG,QAAQ,GAAGV,WAAW,EAA5B;AAEAW,EAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;;AACA,QAAMM,aAAa,GAAIC,CAAD,IAAO;AAC3BJ,IAAAA,QAAQ,CAACT,WAAW,CAACa,CAAD,CAAZ,CAAR;AACD,GAFD;;AAGA,QAAMC,QAAQ,GAAIC,EAAD,IAAQ;AACvBN,IAAAA,QAAQ,CAACR,MAAM,CAACc,EAAD,CAAP,CAAR;AACD,GAFD;;AAGA,QAAMC,QAAQ,GAAID,EAAD,IAAQ;AACvBN,IAAAA,QAAQ,CAACP,WAAW,CAACa,EAAD,CAAZ,CAAR;AACD,GAFD;;AAGA,QAAME,QAAQ,GAAIF,EAAD,IAAQ;AACvBN,IAAAA,QAAQ,CAACN,MAAM,CAACY,EAAD,CAAP,CAAR;AACD,GAFD;;AAGA,QAAMG,QAAQ,GAAGrB,WAAW,CACzBsB,CAAD,IAAO;AACLP,IAAAA,aAAa,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;AACD,GAHyB,EAI1B,CAACT,aAAD,CAJ0B,CAA5B;AAOA,QAAMU,QAAQ,GAAGzB,WAAW,CACzBsB,CAAD,IAAO;AACLA,IAAAA,CAAC,CAACI,cAAF;AACAT,IAAAA,QAAQ,CAACP,KAAD,CAAR;AACAK,IAAAA,aAAa,CAAC,EAAD,CAAb;AACD,GALyB,EAM1B,CAACL,KAAD,EAAQK,aAAR,EAAuBE,QAAvB,CAN0B,CAA5B;AAQA,SACE,MAAC,QAAD;AACE,IAAA,KAAK,EAAEP,KADT;AAEE,IAAA,KAAK,EAAED,KAFT;AAGE,IAAA,QAAQ,EAAEY,QAHZ;AAIE,IAAA,QAAQ,EAAEI,QAJZ;AAKE,IAAA,QAAQ,EAAEN,QALZ;AAME,IAAA,QAAQ,EAAEC;AANZ,IADF;AAUD,CA/CD;;AAiDA,eAAeZ,iBAAf","sourcesContent":["import React, { useCallback } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  changeInput, insert, toggleCheck, remove,\r\n} from '../redux/reducers/todos';\r\nimport TodoList from '../components/TodoList';\r\n\r\nconst TodoListContainer = () => {\r\n  // todos 리듀서에서 관리하는 객체를 통째로 가져올 거라면 state.todos 로 간소화 시킬 수 있습니다.\r\n  const { todos, input } = useSelector((state) => state.todos, []);\r\n  // const [onChangeInput, onInsert, onToggle, onRemove] = useActions(\r\n  //   [changeInput, insert, toggleCheck, remove],\r\n  //   [],\r\n  // );\r\n  const dispatch = useDispatch();\r\n\r\n  console.log(todos);\r\n  const onChangeInput = (i) => {\r\n    dispatch(changeInput(i));\r\n  };\r\n  const onInsert = (id) => {\r\n    dispatch(insert(id));\r\n  };\r\n  const onToggle = (id) => {\r\n    dispatch(toggleCheck(id));\r\n  };\r\n  const onRemove = (id) => {\r\n    dispatch(remove(id));\r\n  };\r\n  const onChange = useCallback(\r\n    (e) => {\r\n      onChangeInput(e.target.value);\r\n    },\r\n    [onChangeInput],\r\n  );\r\n\r\n  const onSubmit = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      onInsert(input);\r\n      onChangeInput('');\r\n    },\r\n    [input, onChangeInput, onInsert],\r\n  );\r\n  return (\r\n    <TodoList\r\n      input={input}\r\n      todos={todos}\r\n      onChange={onChange}\r\n      onSubmit={onSubmit}\r\n      onToggle={onToggle}\r\n      onRemove={onRemove}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TodoListContainer;\r\n"]},"metadata":{},"sourceType":"module"}