{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.ebc523a8074a890e6241.hot-update.js","sources":["webpack:///./redux/reducers/post.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nfunction getPostAPI(postId) {\r\n  // console.log(postId);\r\n  // return axios.get(`https://jsonplaceholder.typicode.com/posts/${postId}`);\r\n  return axios.get('../');\r\n}\r\n\r\nconst initialState = {\r\n  pending: false,\r\n  error: false,\r\n  data: {\r\n    title: '',\r\n    body: '',\r\n  },\r\n};\r\n\r\nconst GET_POST_PENDING = 'GET_POST_PENDING';\r\nconst GET_POST_SUCCESS = 'GET_POST_SUCCESS';\r\nconst GET_POST_FAILURE = 'GET_POST_FAILURE';\r\n\r\nexport const getPost = (postId) => (dispatch) => {\r\n  // 먼저, 요청이 시작했다는것을 알립니다\r\n  console.log('test');\r\n  dispatch({ type: GET_POST_PENDING });\r\n\r\n  // 요청을 시작합니다\r\n  // 여기서 만든 promise 를 return 해줘야, 나중에 컴포넌트에서 호출 할 때 getPost().then(...) 을 할 수 있습니다\r\n  return getPostAPI(postId).then(\r\n    (response) => {\r\n      // 요청이 성공했을경우, 서버 응답내용을 payload 로 설정하여 GET_POST_SUCCESS 액션을 디스패치합니다.\r\n      console.log(response);\r\n      dispatch({\r\n        type: GET_POST_SUCCESS,\r\n        payload: response,\r\n      });\r\n    },\r\n  ).catch((error) => {\r\n    // 에러가 발생했을 경우, 에로 내용을 payload 로 설정하여 GET_POST_FAILURE 액션을 디스패치합니다.\r\n    console.log(error);\r\n    dispatch({\r\n      type: GET_POST_FAILURE,\r\n      payload: error,\r\n    });\r\n  });\r\n};\r\n\r\nconst handleAction = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_POST_PENDING: {\r\n      return {\r\n        ...state,\r\n        pending: true,\r\n        error: false,\r\n      };\r\n    }\r\n    case GET_POST_SUCCESS: {\r\n      const { title, body } = action.payload.data;\r\n      return {\r\n        ...state,\r\n        pending: false,\r\n        data: {\r\n          title, body,\r\n        },\r\n      };\r\n    }\r\n    case GET_POST_FAILURE: {\r\n      return {\r\n        ...state,\r\n        pending: false,\r\n        error: true,\r\n      };\r\n    }\r\n    default: {\r\n      return { ...state };\r\n    }\r\n  }\r\n};\r\n\r\nexport default handleAction;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAHA;AASA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAxBA;AACA;AAyBA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AAAA;AADA;AAHA;AAOA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AAAA;AAAA;AACA;AACA;AA3BA;AA6BA;AACA;AACA;;;;A","sourceRoot":""}