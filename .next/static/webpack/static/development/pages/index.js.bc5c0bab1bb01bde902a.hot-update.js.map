{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.bc5c0bab1bb01bde902a.hot-update.js","sources":["webpack:///./pages/index.jsx"],"sourcesContent":["/* eslint-disable no-nested-ternary */\r\n/* eslint-disable no-useless-constructor */\r\n/* eslint-disable react/destructuring-assignment */\r\nimport React, { useEffect } from 'react';\r\n// import { connect, useDispatch, useSelector } from 'react-redux';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { increment, decrement } from '../redux/actions/counterActions';\r\nimport * as postActions from '../redux/reducers/post';\r\n\r\n// class App extends React.Component {\r\n//   static getInitialProps({ store }) {}\r\n\r\n//   constructor(props) {\r\n//     super(props);\r\n//   }\r\n\r\n//   render() {\r\n//     return (\r\n//       <div>\r\n//         <button onClick={this.props.incrementCounter} type=\"button\">Increment</button>\r\n//         <button onClick={this.props.decrementCounter} type=\"button\">Decrement</button>\r\n//         <h1>{this.props.counter}</h1>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\nconst App = () => {\r\n  const { value } = useSelector((state) => state.counter, []);\r\n  const { data, pending, error } = useSelector((state) => state.post, []);\r\n  // console.log(aaa);\r\n  const dispatch = useDispatch();\r\n  // console.log(value);\r\n  useEffect(() => {\r\n    // console.log(postActions);\r\n    console.log(value);\r\n    dispatch(postActions.getPost(value));\r\n  }, [value]);\r\n\r\n  const aa = () => {\r\n    dispatch(increment());\r\n  };\r\n  const bb = () => {\r\n    dispatch(decrement());\r\n  };\r\n  return (\r\n    <div>\r\n      {value}\r\n      <button type=\"button\" onClick={aa}>증가</button>\r\n      <button type=\"button\" onClick={bb}>감소</button>\r\n      { pending ? <h2>로딩중...</h2>\r\n        : error ? <h1>에러발생!</h1> : (\r\n          <div>\r\n            <h1>{data.title}</h1>\r\n            <p>{data.body}</p>\r\n          </div>\r\n        )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// const mapStateToProps = (state) => ({\r\n//   counter: state.counter.value,\r\n// });\r\n\r\n// const mapDispatchToProps = {\r\n//   incrementCounter,\r\n//   decrementCounter,\r\n// };\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(App);\r\nexport default App;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AADA;AACA;AADA;AAEA;AAAA;AAFA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAUA;AAGA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AADA;;;;A","sourceRoot":""}